---

- name: ensure /root/.ssh folder exist
  file:
    path: /root/.ssh
    state: directory
    mode: 0550

- name: generate ssh keys
  shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa_enc -q -N "" -P {{ consul_encrypt }}
  args:
    creates: /root/.ssh/id_rsa_enc

- name: read private ssh key
  slurp:
    src: '/root/.ssh/id_rsa_enc'
  register: ssh_key

- name: read public ssh key
  slurp:
    src: '/root/.ssh/id_rsa_enc.pub'
  register: ssh_key_pub

- name: put private ssh key
  uri:
    url: "http://{{ consul }}:{{ consul_port }}/v1/kv/{{ provisioner_cluster_name }}/{{ provisioner_name }}/custom_ssh_key"
    method: PUT
    status_code: 200
    body: "{{ ssh_key['content'] | b64decode }}"
  register: ssh_key_consul
  until: ssh_key_consul.failed == false
  delay: 1
  retries: 6000

- name: put public ssh key
  uri:
    url: "http://{{ consul }}:{{ consul_port }}/v1/kv/{{ provisioner_cluster_name }}/{{ provisioner_name }}/custom_ssh_key_pub"
    method: PUT
    status_code: 200
    body: "{{ ssh_key_pub['content'] | b64decode }}"
  register: ssh_key_pub_consul
  until: ssh_key_pub_consul.failed == false
  delay: 1
  retries: 6000
