---

- name: ensure /root/.ssh folder exist
  file:
    path: /root/.ssh
    state: directory
    mode: 0550

- name: get private ssh key
  uri:
    url: "http://{{ consul }}:{{ consul_port }}/v1/kv/{{ provisioner_cluster_name }}/{{ provisioner_name }}/custom_ssh_key"
    method: GET
    status_code: 200
    body_format: json
  register: ssh_key_consul
  until: ssh_key_consul.failed == false
  delay: 1
  retries: 6000

- name: write private encrypted ssh key
  copy:
    content: "{{ ssh_key_consul.json[0] | json_query('Value') | b64decode }}"
    dest: /root/.ssh/id_rsa_enc
    mode: 0400

- name: decrypt ssh keys
  shell: openssl rsa -in /root/.ssh/id_rsa_enc -out /root/.ssh/id_rsa -passin pass:{{ consul_encrypt }} && chmod 400 /root/.ssh/id_rsa
  args:
    creates: /root/.ssh/id_rsa

- name: get public ssh key
  uri:
    url: "http://{{ consul }}:{{ consul_port }}/v1/kv/{{ provisioner_cluster_name }}/{{ provisioner_name }}/custom_ssh_key_pub"
    method: GET
    status_code: 200
    body_format: json
  register: ssh_key_pub_consul
  until: ssh_key_pub_consul.failed == false
  delay: 1
  retries: 6000

- name: write public ssh key
  copy:
    content: "{{ ssh_key_pub_consul.json[0] | json_query('Value') | b64decode }}"
    dest: /root/.ssh/id_rsa.pub
    mode: 0400

- name: read public ssh key
  slurp:
    src: '/root/.ssh/id_rsa.pub'
  register: ssh_key_pub

- name: enable ssh key for direct root access
  authorized_key:
    user: root
    key: "{{ ssh_key_pub['content'] | b64decode }}"
